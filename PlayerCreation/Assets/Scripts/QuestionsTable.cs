// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class QuestionsTable : MonoBehaviour
{
    public TextAsset File;

    private void Start()
    {
        Load(File);
    }

    public class Row
    {
        public string Id;
        public string Question;
        public string Answer_1;
        public string Answer_2;
        public string Answer_3;

    }

    List<Row> rowList = new List<Row>();
    bool isLoaded = false;

    public bool IsLoaded()
    {
        return isLoaded;
    }

    public List<Row> GetRowList()
    {
        return rowList;
    }

    public void Load(TextAsset csv)
    {
        rowList.Clear();
        string[][] grid = CsvParser2.Parse(csv.text);
        for (int i = 1; i < grid.Length; i++)
        {
            Row row = new Row();
            row.Id = grid[i][0];
            row.Question = grid[i][1];
            row.Answer_1 = grid[i][2];
            row.Answer_2 = grid[i][3];
            row.Answer_3 = grid[i][4];

            rowList.Add(row);
        }
        isLoaded = true;
    }

    public int NumRows()
    {
        return rowList.Count;
    }

    public Row GetAt(int i)
    {
        if (rowList.Count <= i)
            return null;
        return rowList[i];
    }

    public Row Find_Id(string find)
    {
        return rowList.Find(x => x.Id == find);
    }
    public List<Row> FindAll_Id(string find)
    {
        return rowList.FindAll(x => x.Id == find);
    }
    public Row Find_Question(string find)
    {
        return rowList.Find(x => x.Question == find);
    }
    public List<Row> FindAll_Question(string find)
    {
        return rowList.FindAll(x => x.Question == find);
    }
    public Row Find_Answer_1(string find)
    {
        return rowList.Find(x => x.Answer_1 == find);
    }
    public List<Row> FindAll_Answer_1(string find)
    {
        return rowList.FindAll(x => x.Answer_1 == find);
    }
    public Row Find_Answer_2(string find)
    {
        return rowList.Find(x => x.Answer_2 == find);
    }
    public List<Row> FindAll_Answer_2(string find)
    {
        return rowList.FindAll(x => x.Answer_2 == find);
    }
    public Row Find_Answer_3(string find)
    {
        return rowList.Find(x => x.Answer_3 == find);
    }
    public List<Row> FindAll_Answer_3(string find)
    {
        return rowList.FindAll(x => x.Answer_3 == find);
    }

}